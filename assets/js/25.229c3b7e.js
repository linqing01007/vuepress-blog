(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{425:function(t,v,_){"use strict";_.r(v);var e=_(70),s=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h3",{attrs:{id:"js-事件循环机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#js-事件循环机制"}},[t._v("#")]),t._v(" js 事件循环机制")]),t._v(" "),_("p",[t._v("js 是一门 "),_("code",[t._v("单线程的")]),t._v("、"),_("code",[t._v("非阻塞")]),t._v("的脚本语言，js 代码在执行的任何时候，都只有一个主线程来处理所有的任务，非阻塞靠的就是 "),_("code",[t._v("event loop")]),t._v("（事件循环）。")]),t._v(" "),_("p",[_("code",[t._v("event loop")]),t._v(" 最主要是分为三部分：主线程，宏队列("),_("code",[t._v("macrotask")]),t._v(")，微队列("),_("code",[t._v("microtask")]),t._v(")，js 的任务队列分为同步任务和异步任务，所有的同步任务都是在主线程里执行的，异步任务可能会在 "),_("code",[t._v("macrotask")]),t._v(" 或者 "),_("code",[t._v("microtask")]),t._v(" 里面。")]),t._v(" "),_("h4",{attrs:{id:"宏任务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#宏任务"}},[t._v("#")]),t._v(" 宏任务")]),t._v(" "),_("ul",[_("li",[t._v("script")]),t._v(" "),_("li",[t._v("setTimeout(setInterval)")]),t._v(" "),_("li",[t._v("setImmediate(Node 环境)")]),t._v(" "),_("li",[t._v("requestAnimationFrame")]),t._v(" "),_("li",[t._v("UI 渲染")])]),t._v(" "),_("h4",{attrs:{id:"微任务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微任务"}},[t._v("#")]),t._v(" 微任务")]),t._v(" "),_("ul",[_("li",[t._v("Promise 的 then(), catch(), finally()里面的回调")]),t._v(" "),_("li",[t._v("process.nextTick(Node 环境)")])]),t._v(" "),_("h3",{attrs:{id:"js-运行机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#js-运行机制"}},[t._v("#")]),t._v(" js 运行机制")]),t._v(" "),_("p",[t._v("代码执行开启一个全局调用栈（主栈）提供代码运行的环境，在执行过程中同步任务代码立即执行，遇到异步任务将异步的回调注册到任务队列中，等待同步代码执行完毕查看异步是否完成，如果完成将当前异步任务的回调拿到主栈中执行。")]),t._v(" "),_("h4",{attrs:{id:"执行顺序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#执行顺序"}},[t._v("#")]),t._v(" 执行顺序")]),t._v(" "),_("ol",[_("li",[t._v("微队列只有一个，但是宏队列可能会有多个")]),t._v(" "),_("li",[t._v("代码从开始执行调用一个全局执行栈（主线程），开始执行 script 代码")]),t._v(" "),_("li",[t._v("执行过程中同步代码立即执行，异步代码放到代码放到任务队列中，其中宏任务放到宏队列，微任务放到微队列")]),t._v(" "),_("li",[t._v("当同步代码全部执行完成\n"),_("ul",[_("li",[t._v("先查看任务队列中的微任务队列是否存在微任务\n"),_("ul",[_("li",[t._v("有的话将所有微任务清空")]),t._v(" "),_("li",[t._v("微任务执行过程所产生的微任务放到微任务队列中，在此次执行中一并清空")])])]),t._v(" "),_("li",[t._v("如果没有微任务，再看看宏任务队列中有没有宏任务，有的话执行，没有的话事件轮询第一波结束。\n"),_("ul",[_("li",[t._v("执行过程中产生的微任务放到微队列")]),t._v(" "),_("li",[t._v("完成宏任务后清空微队列中的微任务")])])])])])]),t._v(" "),_("p",[t._v("参考："),_("RouterLink",{attrs:{to:"/knowledge/promise.html"}},[t._v("promise")])],1)])}),[],!1,null,null,null);v.default=s.exports}}]);