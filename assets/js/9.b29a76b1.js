(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{408:function(v,e,_){"use strict";_.r(e);var t=_(70),i=Object(t.a)({},(function(){var v=this,e=v.$createElement,_=v._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"层叠上下文"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#层叠上下文"}},[v._v("#")]),v._v(" 层叠上下文")]),v._v(" "),_("p",[v._v("层叠上下文是对 "),_("code",[v._v("HTML")]),v._v(" 元素的一个三维构想；层叠上下文由满足一下任意一个条件的元素组成：")]),v._v(" "),_("ol",[_("li",[v._v("文档根元素 "),_("code",[v._v("<html>")]),v._v("。")]),v._v(" "),_("li",[_("code",[v._v("position")]),v._v(" 值为 "),_("code",[v._v("absolute")]),v._v(" 或 "),_("code",[v._v("relative")]),v._v(" 且 "),_("code",[v._v("z-index")]),v._v(" 值不为 "),_("code",[v._v("auto")]),v._v(" 的元素。")]),v._v(" "),_("li",[_("code",[v._v("position")]),v._v(" 值为 fixed 或 sticky 的元素。")]),v._v(" "),_("li",[v._v("flex 容器的子元素，且 z-index 值不为 auto。")]),v._v(" "),_("li",[v._v("grid 容器的子元素，且 z-index 值不为auto。")]),v._v(" "),_("li",[v._v("opacity 属性值小于 1 的元素。")]),v._v(" "),_("li",[v._v("以下任意属性值不为 none 的元素：")])]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[v._v("- transform\n- filter\n- perspective\n- cilp-path\n- mask / mask-image / mask-border\n")])])]),_("p",[v._v("在层叠上下文中，子元素同样也按照上述规则进行层叠，且子级层叠上下文的 z-index 值只在父级中才有意义。")]),v._v(" "),_("p",[v._v("总结：")]),v._v(" "),_("ul",[_("li",[v._v("层叠上下文可以包含在其他层叠上下文中，并且一起创建一个层叠上下文的层级。")]),v._v(" "),_("li",[v._v("每个层叠上下文都完全独立于它的兄弟元素：当处理层叠时只考虑子元素。")]),v._v(" "),_("li",[v._v("每个层叠上下文都是自包含的：当一个元素的内容发生层叠后，该元素将被作为整体在父级层叠上下文中按顺序进行层叠。")]),v._v(" "),_("li",[v._v("分辨出层叠的元素在 Z 轴上的渲染顺序的一个简单方法是将它们想象成一系列的版本号，子元素是其父元素版本号之下的次要版本。")])])])}),[],!1,null,null,null);e.default=i.exports}}]);