(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{414:function(o,l,e){"use strict";e.r(l);var _=e(70),v=Object(_.a)({},(function(){var o=this,l=o.$createElement,e=o._self._c||l;return e("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[e("h2",{attrs:{id:"number"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[o._v("#")]),o._v(" Number")]),o._v(" "),e("ol",[e("li",[o._v("js中的数字类型只有Number，采用IEEE754标准中的“双精度浮点数”来表示一个数字，不区分整数和浮点数。数值范围是最大值为："),e("code",[o._v("1.7976931348623157 × 10308")]),o._v(" ，最小值为 "),e("code",[o._v("5 × 10-324")]),o._v("\n可以通过 "),e("code",[o._v("Number.MAX_VALUE")]),o._v(" 和 "),e("code",[o._v("Number.MIN_VALUE")]),o._v(" 获得。")]),o._v(" "),e("li",[o._v("精度丢失\n入，但二进制只有0和1，于是变0舍1入。所以 "),e("code",[o._v("0.1+0.2 ！== 0.3")])]),o._v(" "),e("li",[o._v("数值转换\nNumber(value),对字符串进行整体转换，一元加操作符“+”和Number()具有相同作用\nparseInt(string, [, raidx])，对字符串进行部分转换，只转换第一个无效字符前的字符。\nparseFloat(string)")])]),o._v(" "),e("h2",{attrs:{id:"symbol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#symbol"}},[o._v("#")]),o._v(" Symbol")]),o._v(" "),e("p",[o._v("Symbol的特性")]),o._v(" "),e("ol",[e("li",[o._v("Symbol值通过Symbol函数生成，使用typeof 结果为“symbol”")]),o._v(" "),e("li",[o._v("Symbol函数前不能使用new命令，否则会报错。这是因为生成的Symbol是一个原始类型的值，不能是对象")]),o._v(" "),e("li",[o._v("instanceof的结果为false")]),o._v(" "),e("li",[o._v("Symbol函数可以接受一个字符串作为参数，表示对Symbol实例的描述，主要是在控制显示或者转化为字符串时易于区分。")]),o._v(" "),e("li",[o._v("如果Symbol参数是一个对象，就会调用该对象的toString方法转化为字符串后再生成symbol值。")]),o._v(" "),e("li",[o._v("symbol函数的参数只是表示对当前的symbol值的描述，相同参数的symbol函数返回的值是不相等的")]),o._v(" "),e("li",[o._v("symbol值不能与其他类型的值进行运算，会报错")]),o._v(" "),e("li",[o._v("Symbol值可以显示转化为字符串String(symbol)或者symbol.toString()")]),o._v(" "),e("li",[o._v("Symbol值可以作为标识符用于对象的属性名，可以保证不会出现同名的属性")]),o._v(" "),e("li",[o._v("Symbol 作为属性名，该属性不会出现在 "),e("code",[o._v("for...in")]),o._v("、"),e("code",[o._v("for...of")]),o._v(" 循环中，也不会被 "),e("code",[o._v("Object.keys()")]),o._v("、"),e("code",[o._v("Object.getOwnPropertyNames()")]),o._v("、"),e("code",[o._v("JSON.stringify()")]),o._v(" 返回。但是，它也不是私有属性，有一个 "),e("code",[o._v("Object.getOwnPropertySymbols")]),o._v(" 方法，可以获取指定对象的所有 Symbol 属性名。")]),o._v(" "),e("li",[o._v("如果我们希望使用同一个 Symbol 值，可以使用 "),e("code",[o._v("Symbol.for")]),o._v("。它接受一个字符串作为参数，然后搜索有没有以该参数作为名称的 Symbol 值。如果有，就返回这个 Symbol 值，否则就新建并返回一个以该字符串为名称的 Symbol 值。")]),o._v(" "),e("li",[o._v("Symbol.keyFor 方法返回一个已登记的 Symbol 类型值的 key。")])]),o._v(" "),e("p",[o._v("参考链接:\n"),e("a",{attrs:{href:"https://www.cnblogs.com/onepixel/p/5140944.html",target:"_blank",rel:"noopener noreferrer"}},[o._v("https://www.cnblogs.com/onepixel/p/5140944.html"),e("OutboundLink")],1)])])}),[],!1,null,null,null);l.default=v.exports}}]);